"""
Django settings for clearit project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#*=nmjq+633c_yrdt1y_%y!*bfz8f=t*m-8r!w5i0osbywt1j)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False
ALLOWED_HOSTS = []  



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'clear'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'clearit.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'clearit.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'static'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

import os
from dotenv import load_dotenv
load_dotenv()  # Load .env file at project start

# ✅ Default sender email (must be verified in SendGrid)
DEFAULT_FROM_EMAIL = 'varmasagar108@gmail.com'

# ✅ Email backend settings using SendGrid
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'apikey'  # Literal string 'apikey', this is SendGrid's requirement
EMAIL_HOST_PASSWORD = os.getenv('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')  # Get from .env


import os
# from dotenv import load_dotenv

# # Load environment variables from send.env
# load_dotenv(dotenv_path=os.path.join(BASE_DIR, 'send.env'))

# DEFAULT_FROM_EMAIL = 'clearit712@gmail.com'

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.sendgrid.net'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'apikey'  # Keep this literal
# EMAIL_HOST_PASSWORD = os.getenv('SENDGRID_API_KEY')



# ✅ Optional (for debugging email delivery)
EMAIL_USE_SSL = False
EMAIL_TIMEOUT = 20


# import ssl
# import smtplib
# from django.core.mail.backends.smtp import EmailBackend

# class UnsafeEmailBackend(EmailBackend):
#     def open(self):
#         try:
#             self.connection = smtplib.SMTP(self.host, self.port, local_hostname=self.local_hostname, timeout=self.timeout)
#             self.connection.set_debuglevel(0)
#             self.connection.starttls(context=ssl._create_unverified_context())
#             self.connection.login(self.username, self.password)
#             return True
#         except:
#             if not self.fail_silently:
#                 raise
#             return False

# EMAIL_BACKEND = 'path.to.your.settings.UnsafeEmailBackend'









#Admin Email
ADMINS = [('Admin', 'varmasagar108@gmai.com')]

# settings.py (for development only)
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'